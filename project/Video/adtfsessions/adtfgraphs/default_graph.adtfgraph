<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>default_graph</name>
  <graphs>
    <graph>
      <name>playback_video</name>
      <filters>
        <filter>
          <name>videoconvert</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>filesrc</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>decodebin</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>appsink</name>
          <class_id>app_sink_filter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>capsfilter</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy_2</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>Binding Proxy_1</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>capsfilter.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>filesrc.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
      </binding_proxys>
      <connections>
        <connection>
          <name>decodebin.out_Binding Proxy_2.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy_2._videoconvert.in</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>videoconvert</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink.outpin_Sample Stream.</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>appsink</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._video.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoconvert.out_Binding Proxy_1.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>videoconvert</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>capsfilter.out_capsfilter.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>capsfilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>capsfilter.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>capsfilter.out._appsink.in</name>
          <source_connector_path>
            <connector/>
            <component>capsfilter.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>appsink</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>filesrc.out_filesrc.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>filesrc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>filesrc.out._decodebin.in</name>
          <source_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy_1._capsfilter.in</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>capsfilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>adtf_video_to_gstreamer</name>
      <filters>
        <filter>
          <name>GStreamer Launcher Filter_2</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>GStreamer Launcher Filter_3</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>app_sink</name>
          <class_id>app_sink_filter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>app_source</name>
          <class_id>app_source_filter.gstreamer.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>appsource</name>
          <class_id>app_source_filter.gstreamer.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>GStreamer Launcher Filter</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video</name>
          <portname>video</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>app_sink.outpin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys>
        <binding_proxy>
          <name>app_sink.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>GStreamer Launcher Filter_2.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>appsource.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
      </binding_proxys>
      <connections>
        <connection>
          <name>app_sink.out._GStreamer Launcher Filter_3.in</name>
          <source_connector_path>
            <connector/>
            <component>app_sink.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>GStreamer Launcher Filter_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>GStreamer Launcher Filter_2.out_GStreamer Launcher Filter_2.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>GStreamer Launcher Filter_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>GStreamer Launcher Filter_2.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>GStreamer Launcher Filter_2.out._app_sink.in</name>
          <source_connector_path>
            <connector/>
            <component>GStreamer Launcher Filter_2.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>app_sink</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>app_source.out_app_sink.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>app_source</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>app_sink.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>app_sink.outpin_app_sink.outpin.</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>app_sink</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>app_sink.outpin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>app_sink.outpin._app_source.input</name>
          <source_connector_path>
            <connector/>
            <component>app_sink.outpin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>app_source</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video._appsource.input</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>appsource</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsource.out_appsource.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>appsource</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsource.out._GStreamer Launcher Filter.in</name>
          <source_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>GStreamer Launcher Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>video_compression</name>
      <filters>
        <filter>
          <name>Compress</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>Decompress</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>appsink</name>
          <class_id>app_sink_filter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>appsource</name>
          <class_id>app_source_filter.gstreamer.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>appsink1</name>
          <class_id>app_sink_filter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>videotestsrc</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>filesrc</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>decodebin</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>appsink.outpin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>appsink1.outpin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys>
        <binding_proxy>
          <name>appsource.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>videotestsrc.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>filesrc.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>Decompress.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>Compress.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <connections>
        <connection>
          <name>appsink.outpin_appsink.outpin.</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>appsink</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsink.outpin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink.outpin._appsource.input</name>
          <source_connector_path>
            <connector/>
            <component>appsink.outpin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>appsource</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsource.out_appsource.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>appsource</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsource.out._Decompress.in</name>
          <source_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Decompress</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink1.outpin_appsink1.outpin.</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>appsink1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsink1.outpin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink1.outpin._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>appsink1.outpin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videotestsrc.out_videotestsrc.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>videotestsrc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>videotestsrc.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videotestsrc.out._Compress.in</name>
          <source_connector_path>
            <connector/>
            <component>videotestsrc.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Compress</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>filesrc.out_filesrc.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>filesrc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>filesrc.out._decodebin.in</name>
          <source_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>decodebin.out_videotestsrc.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>videotestsrc.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Decompress.out_Decompress.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Decompress</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Decompress.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Decompress.out._appsink1.in</name>
          <source_connector_path>
            <connector/>
            <component>Decompress.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>appsink1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Compress.out_Compress.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Compress</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Compress.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Compress.out._appsink.in</name>
          <source_connector_path>
            <connector/>
            <component>Compress.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>appsink</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>convert_video</name>
      <filters>
        <filter>
          <name>filesrc</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>decodebin</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>appsink</name>
          <class_id>app_sink_filter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>capsfilter</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>videoconvert</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>image_to_mat</name>
          <class_id>image_to_mat.opencv.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>image</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>mat</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>mat_to_image</name>
          <class_id>mat_to_image.opencv.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>mat</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>image</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>DNN Filter</name>
          <class_id>dnn.opencv.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>mat_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>mat_out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>DNN Plot Filter</name>
          <class_id>dnn_plot.opencv.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>dnn</name>
            </pin>
            <pin>
              <name>mat_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>mat_out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>videoscale</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>to_file</name>
          <graph>create_video_mkv</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>appsink.outpin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Image to Mat Filter.mat</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>DNN Filter.mat_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Mat to Image Filter.image</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>DNN Plot Filter.mat_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys>
        <binding_proxy>
          <name>filesrc.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>decodebin.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>capsfilter.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>videoscale.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
        <binding_proxy>
          <name>videoconvert.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <connections>
        <connection>
          <name>filesrc.out_filesrc.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>filesrc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>filesrc.out._decodebin.in</name>
          <source_connector_path>
            <connector/>
            <component>filesrc.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>decodebin.out_decodebin.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>decodebin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>decodebin.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink.outpin_appsink.outpin.</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>appsink</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsink.outpin</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>decodebin.out._videoconvert.in</name>
          <source_connector_path>
            <connector/>
            <component>decodebin.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>videoconvert</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>capsfilter.out_capsfilter.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>capsfilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>capsfilter.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>capsfilter.out._appsink.in</name>
          <source_connector_path>
            <connector/>
            <component>capsfilter.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>appsink</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsink.outpin._image_to_mat.image</name>
          <source_connector_path>
            <connector/>
            <component>appsink.outpin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>image</connector>
            <component>image_to_mat</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Image to Mat Filter.mat._DNN Filter.mat_in</name>
          <source_connector_path>
            <connector/>
            <component>Image to Mat Filter.mat</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>mat_in</connector>
            <component>DNN Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>DNN Filter.mat_out_DNN Filter.mat_out.</name>
          <source_connector_path>
            <connector>mat_out</connector>
            <component>DNN Filter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>DNN Filter.mat_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>mat_to_image.image_Mat to Image Filter.image.</name>
          <source_connector_path>
            <connector>image</connector>
            <component>mat_to_image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Mat to Image Filter.image</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>DNN Plot Filter.mat_out_DNN Plot Filter.mat_out.</name>
          <source_connector_path>
            <connector>mat_out</connector>
            <component>DNN Plot Filter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>DNN Plot Filter.mat_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>DNN Plot Filter.mat_out._mat_to_image.mat</name>
          <source_connector_path>
            <connector/>
            <component>DNN Plot Filter.mat_out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>mat</connector>
            <component>mat_to_image</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>DNN Filter.mat_out._DNN Plot Filter.dnn</name>
          <source_connector_path>
            <connector/>
            <component>DNN Filter.mat_out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>dnn</connector>
            <component>DNN Plot Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Image to Mat Filter.mat._DNN Plot Filter.mat_in</name>
          <source_connector_path>
            <connector/>
            <component>Image to Mat Filter.mat</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>mat_in</connector>
            <component>DNN Plot Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Mat to Image Filter.image._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>Mat to Image Filter.image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>image_to_mat.mat_Image to Mat Filter.mat.</name>
          <source_connector_path>
            <connector>mat</connector>
            <component>image_to_mat</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Image to Mat Filter.mat</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoscale.out._capsfilter.in</name>
          <source_connector_path>
            <connector/>
            <component>videoscale.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>capsfilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoconvert.out_videoconvert.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>videoconvert</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>videoconvert.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoconvert.out._videoscale.in</name>
          <source_connector_path>
            <connector/>
            <component>videoconvert.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>videoscale</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoscale.out_videoscale.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>videoscale</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>videoscale.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Mat to Image Filter.image._to_file.video</name>
          <source_connector_path>
            <connector/>
            <component>Mat to Image Filter.image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>to_file</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>simplepipe</name>
      <filters>
        <filter>
          <name>GStreamer test Pipeline</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections/>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>create_video_mkv</name>
      <filters>
        <filter>
          <name>appsource</name>
          <class_id>app_source_filter.gstreamer.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </filter>
        <filter>
          <name>filesink</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>x264enc</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>avimux</name>
          <class_id>gstreamerfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>queue</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>out</name>
            </pin>
          </binding_servers>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
        <filter>
          <name>GStreamer Launcher Filter</name>
          <class_id>gstreamerlauncherfilter.gstreamer.videotb.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>in</name>
            </pin>
          </binding_clients>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>video</name>
        </data_port>
      </input_data_ports>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys>
        <binding_proxy>
          <name>appsource.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>g.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>pre_encode.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
        <binding_proxy>
          <name>x264env.out</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </binding_proxy>
      </binding_proxys>
      <connections>
        <connection>
          <name>appsource.out_appsource.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>appsource</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>g.out._filesink.in</name>
          <source_connector_path>
            <connector/>
            <component>g.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>filesink</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>pre_encode.out._x264enc.in</name>
          <source_connector_path>
            <connector/>
            <component>pre_encode.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>x264enc</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>x264enc.out_x264env.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>x264enc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>x264env.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>x264env.out._avimux.in</name>
          <source_connector_path>
            <connector/>
            <component>x264env.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>avimux</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>avimux.out_g.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>avimux</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>g.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>queue.out_pre_encode.out.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>queue</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>pre_encode.out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._appsource.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>appsource</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>appsource.out._queue.in</name>
          <source_connector_path>
            <connector/>
            <component>appsource.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>queue</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>pre_encode.out._GStreamer Launcher Filter.in</name>
          <source_connector_path>
            <connector/>
            <component>pre_encode.out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>GStreamer Launcher Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>record_from_camera</name>
      <filters>
        <filter>
          <name>Mat to Image Filter</name>
          <class_id>mat_to_image.opencv.videotb.cid</class_id>
          <input_pins>
            <pin>
              <name>mat</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>image</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>recorder</name>
          <graph>create_video_mkv</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>mat</name>
          <portname>mat</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>mat._Mat to Image Filter.mat</name>
          <source_connector_path>
            <connector/>
            <component>mat</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>mat</connector>
            <component>Mat to Image Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Mat to Image Filter.image_Sample Stream.</name>
          <source_connector_path>
            <connector>image</connector>
            <component>Mat to Image Filter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._recorder.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>default_streaming_graph</name>
      <streaming_sources/>
      <streaming_dock_in_ports/>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections/>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>video_source</name>
      <streaming_sources>
        <streaming_source>
          <name>Demo Virtual Clock Input</name>
          <class_id>demo_virtual_clock_input.streaming_source.adtf.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outpin</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections>
        <connection>
          <name>Demo Virtual Clock Input.outpin_Filter Graph Dock.video</name>
          <source_connector_path>
            <connector>outpin</connector>
            <component>Demo Virtual Clock Input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>camera_source</name>
      <streaming_sources>
        <streaming_source>
          <name>Camera Source</name>
          <class_id>camera.opencv.videotb.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>data</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>mat</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections>
        <connection>
          <name>Camera Source.data_Filter Graph Dock.mat</name>
          <source_connector_path>
            <connector>data</connector>
            <component>Camera Source</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>mat</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
